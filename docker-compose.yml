version: "3.8"

networks:
  monitoring:

volumes:
  influxdb-data:
    name: influxdb-data
  grafana-data:
    name: grafana-data

services:
  influxdb:
    image: influxdb:2.3.0
    ports:
      - 8086:8086
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-data:/etc/influxdb2
    environment:
      - MQTT_BROKER=${MQTT_BROKER}
    networks:
      - monitoring

  telegraf:
    image: telegraf:1.30
    depends_on:
      - influxdb
      - mosquitto
    environment:
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - MQTT_BROKER=${MQTT_BROKER}
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:9.0.4
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - MQTT_BROKER=${MQTT_BROKER}
    networks:
      - monitoring

  openzwave:
    build: ./openzwave_service
    ports:
      - "5000:5000"
    environment:
      - MQTT_BROKER=${MQTT_BROKER}
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    networks:
      - monitoring

  plugwise:
    build: ./plugwise_service
    tty: true
    stdin_open: true
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    environment:
      - MQTT_BROKER=${MQTT_BROKER}
    networks:
      - monitoring

  mqtt-listener:
    build: ./mqtt_listener_service
    networks:
      - monitoring
    environment:
      - MQTT_BROKER=${MQTT_BROKER}

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    ports:
      - "1883:1883" # TCP
      - "9001:9001" # WebSocket
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - monitoring

  planner:
    build: ./planner
    networks:
      - monitoring
    environment:
      - PLANNER=/usr/games/fast-downward
      - MQTT_BROKER=${MQTT_BROKER}
      - INFLUX_URL=${INFLUX_URL}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - INFLUX_ORG=${INFLUX_ORG}
      - INFLUX_BUCKET=${INFLUX_BUCKET}
